import{_ as t,r as o,o as c,c as r,a as s,b as p,F as l,e as a,d as n}from"./app.88860582.js";const u={},i=a(`<h1 id="\u5B9A\u578B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u578B\u6570\u7EC4" aria-hidden="true">#</a> \u5B9A\u578B\u6570\u7EC4</h1><h2 id="arraybuffer" tabindex="-1"><a class="header-anchor" href="#arraybuffer" aria-hidden="true">#</a> ArrayBuffer</h2><p>\u901A\u8FC7 <code>ArrayBuffer</code> \u53EF\u4EE5\u5206\u914D\u4E00\u6BB5\u8FDE\u7EED\u7684\u5185\u5B58\uFF0C \u88AB\u79F0\u4E3A\u6570\u636E\u7F13\u5B58\u533A\u3002\u9700\u8981\u901A\u8FC7\u7C7B\u578B\u6570\u7EC4\u6216\u8005\u89C6\u56FE\u64CD\u4F5C\u8FD9\u6BB5\u6570\u636E\u7F13\u5B58\u533A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">//  10\u5B57\u8282\u957F\u5EA6\u7684\u6570\u7EC4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="dataview" tabindex="-1"><a class="header-anchor" href="#dataview" aria-hidden="true">#</a> DataView</h2><p>ArrayBuffer \u5FC5\u987B\u8981\u901A\u8FC7\u89C6\u56FE\u8FDB\u884C\u8BFB\u5199,\u5B9E\u4F8B\u5316\u4E00\u4E2A\u89C6\u56FE <code>new DataView(buffer[, start, end])</code></p>`,6),k=n("\u5B9E\u4F8B\u63D0\u4F9B\u5F88\u591A\u64CD\u4F5C buffer \u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u8BE6\u7EC6\u8BF4\u660E\u8BE6\u89C1"),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView#constructor",target:"_blank",rel:"noopener noreferrer"},b=n("MDN"),m=n("\uFF0C\u5982 Uint8 \u5C31\u8868\u793A\u4E00\u4E2A\u4F4D\u7F6E\u5360\u4E00\u4E2A\u5B57\u8282\uFF0C\u53D6\u503C\u8303\u56F4\u4E3A 0\uFF5E255\u3002"),y=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">//  10\u5B57\u8282\u957F\u5EA6\u7684\u6570\u7EC4</span>
<span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">//  \u5DE6\u95ED\u53F3\u5F00\uFF0C \u4E0D\u80FD\u8D85\u8FC7 buffer \u7684\u8303\u56F4\uFF0C\u5426\u5219\u4F1A\u62A5\u9519</span>

view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>

view<span class="token punctuation">.</span><span class="token function">getInt8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// -128 (\u8BBE\u7F6E\u7684\u662F\u6E90\u7801\uFF0C\u8BFB\u53D6\u7684\u662F\u76F8\u5E94\u7684\u8865\u7801)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u89C6\u56FE\u662F\u64CD\u4F5C\u5B57\u8282\u7684\uFF0C\u8BBE\u7F6E\u503C\u65F6\u5FC5\u987B\u5728\u5176\u53D6\u503C\u8303\u56F4\u5185\uFF0C \u6BD4\u5982 Uint8 \u7684\u53D6\u503C\u8303\u56F4\u4E3A0\uFF5E255\uFF0C \u5982\u679C\u8BBE\u7F6E\u4E3A\u8303\u56F4\u5916\u7684 Integer <code>value &amp; 255</code>,\u5982\u679C\u8BBE\u7F6E\u7684\u4E3A<strong>\u975E</strong> Integer \u7C7B\u578B\uFF0C\u4F1A\u53D6value.valueOf() \u8FDB\u884C\u8BBE\u7F6E\u3002\u5982\u679CvalueOf\u4E0D\u662F\u6570\u5B57\uFF0C\u5219\u7ED3\u679C\u4E3A0.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;256&#39;</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">byteLength</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token literal-property property">byteOffset</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">buffer</span><span class="token operator">:</span> ArrayBuffer <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Uint8Contents<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token number">01</span> <span class="token number">01</span> <span class="token number">00</span> <span class="token number">02</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">byteLength</span><span class="token operator">:</span> <span class="token number">10</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5982\u4E0A\u56FE\uFF0C\u8BBE\u7F6E\u7B2C4\u4E2A\u5B57\u8282\u4E3A \u2018a\u2019 \u65F6\uFF0CvalueOf \u4E0D\u662F\u6570\u5B57\uFF0C \u6700\u7EC8\u8BBE\u7F6E\u4E3A 0\u3002</p></div><h2 id="typedarray-\u5B9A\u578B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#typedarray-\u5B9A\u578B\u6570\u7EC4" aria-hidden="true">#</a> typedArray(\u5B9A\u578B\u6570\u7EC4)</h2>`,3),f=n("\u5728\u521B\u5EFA\u4E00\u4E2A typedArray \u65F6\uFF0C\u5C31\u4F1A\u521B\u5EFA\u4E00\u4E2A ArrayBuffer\u3002typedArray \u4E5F\u6709\u597D\u51E0\u79CD\u5F62\u5F0F\uFF0C\u8BE6\u60C5\u89C1"),v={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#typedarray_objects",target:"_blank",rel:"noopener noreferrer"},h=n("MDN"),g=a(`<p>\u521B\u5EFA\u4E00\u4E2A typedArray \u5B9E\u4F8B\u6709\u597D\u51E0\u79CD\u65B9\u5F0F\u3002</p><h3 id="new" tabindex="-1"><a class="header-anchor" href="#new" aria-hidden="true">#</a> new</h3><ul><li>\u63A5\u6536\u4E00\u4E2A intergre</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> typedArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536\u4E00\u4E2A\u6570\u5B57\uFF0C\u8868\u793A\u521B\u5EFA \u957F\u5EA6\u4E3A 10 \u7684 Uint16</span>

typedArray<span class="token punctuation">.</span>byteLength <span class="token comment">// 20 \uFF08\u4E00\u4E2AUint \u4E3A\u4E24\u4E2A\u5B57\u8282 \uFF0C \u6240\u4EE5 byteLength \u4E3A 20\uFF09</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u63A5\u6536\u4E00\u4E2A\u7C7B\u6570\u7EC4(\u53EF\u4EE5\u662F\u6709 length \u5C5E\u6027\u7684 \u5BF9\u8C61),\u8FD9\u79CD\u65B9\u5F0F\u521B\u5EFA\u7C7B\u4F3C\u4E8E Array.from()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> typedArray1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> typedArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u7ED3\u679C\u548C\u63A5\u6536\u4E00\u4E2A length \u7C7B\u4F3C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u63A5\u6536\u5176\u4ED6 typedArray</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> typed16Array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> typed8Array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>typed16Array<span class="token punctuation">)</span> <span class="token comment">//  \u6B64\u65F6 byteLength \u4E3A 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u63A5\u6536\u4E00\u4E2A buffer (new TypedArray(buffer, byteOffset, length))</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> typedArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span>arrayBuffer<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5982\u4E0A\u521B\u5EFA Uint16Array \u65F6 length \u4E00\u5B9A\u8981\u4E3A 16 \u7684\u500D\u6570\uFF0C\u6240\u5360\u7684\u4F4D\u7F6E \u8981\u5728 buffer \u7684\u8303\u56F4\u5185</p></div><ul><li><strong>TypedArray.from</strong></li></ul>`,12),_=n("\u7528\u6CD5\u7C7B\u4F3C\u4E8E "),w={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#parameters",target:"_blank",rel:"noopener noreferrer"},A=n("Array.from()"),j=n(", \u533A\u522B\u5728\u4E8E\u53EA\u63A5\u53D7\u8303\u56F4\u5185\u7684 Integer, \u5982\u679C\u4E0D\u662FInteger\uFF0C\u5904\u7406\u65B9\u5F0F\u7C7B\u4F3C\u4E8E "),U=s("a",{href:"#dataview"},"DataView",-1),x=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> Uint8Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// Uint8Array(3) [ 1, 2, 0 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>TypedArray.of</strong></li></ul>`,2),B=n("\u7528\u6CD5\u7C7B\u4F3C\u4E8E "),O={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of",target:"_blank",rel:"noopener noreferrer"},V=n("Array.of()"),I=n(", \u533A\u522B\u5728\u4E8E\u53EA\u63A5\u53D7\u8303\u56F4\u5185\u7684 Integer, \u5982\u679C\u4E0D\u662FInteger\uFF0C\u5904\u7406\u65B9\u5F0F\u7C7B\u4F3C\u4E8E "),S=s("a",{href:"#dataview"},"DataView",-1),D=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> Uint8Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Uint8Array(3) [ 1, 2, 0 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1);function L(N,T){const e=o("ExternalLinkIcon");return c(),r(l,null,[i,s("p",null,[k,s("a",d,[b,p(e)]),m]),y,s("p",null,[f,s("a",v,[h,p(e)])]),g,s("p",null,[_,s("a",w,[A,p(e)]),j,U]),x,s("p",null,[B,s("a",O,[V,p(e)]),I,S]),D],64)}var E=t(u,[["render",L],["__file","typedArray.html.vue"]]);export{E as default};
